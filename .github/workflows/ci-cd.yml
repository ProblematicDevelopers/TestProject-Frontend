name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    # 빌드만 수행 (lint 제외)
    - name: Build project
      run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "🚀 Frontend 배포 시작"
          cd ~/testproject/frontend
          
          # 로컬 변경사항 무시하고 강제 업데이트
          git fetch origin
          git reset --hard origin/main
          
          # Docker 이미지 빌드
          docker build -t pd-test-frontend:latest .
          
          # 서비스 재시작
          cd ~/testproject
          docker-compose stop frontend
          docker-compose rm -f frontend
          docker-compose up -d frontend
          
          echo "✅ Frontend 배포 완료!"
