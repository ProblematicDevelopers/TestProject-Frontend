name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint
      continue-on-error: true  # lint 실패해도 계속 진행
      
    - name: Build project
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Dev Environment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "🚀 Deploying Frontend to Development"
          cd ~/testproject/frontend
          git checkout develop
          git pull origin develop
          
          # 개발 환경용 빌드
          docker build -t pd-test-frontend:dev .
          
          # 개발 환경은 다른 포트 사용 가능 (예: 3000)
          # docker run -d -p 3000:80 --name pd-test-frontend-dev pd-test-frontend:dev
          
          echo "✅ Frontend dev deployment completed!"

  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "🚀 Deploying Frontend to Production"
          cd ~/testproject/frontend
          git checkout main
          git pull origin main
          
          # Docker 이미지 빌드
          docker build -t pd-test-frontend:latest .
          
          # 서비스 재시작
          cd ~/testproject
          docker-compose stop frontend
          docker-compose rm -f frontend
          docker-compose up -d frontend
          
          # 헬스체크
          sleep 10
          curl -f http://localhost || exit 1
          
          echo "✅ Frontend production deployment completed!"
